<!DOCTYPE HTML>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>men's made</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta property="og:title" content="">
    <meta property="og:type" content="">
    <meta property="og:url" content="">
    <meta property="og:image" content="">
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="admin_assets/imgs/theme/favicon.svg">
    <!-- Template CSS -->
    <link href="admin_assets/css/main.css" rel="stylesheet" type="text/css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

</head>

<body>
    <div class="screen-overlay"></div>
    <aside class="navbar-aside" id="offcanvas_aside">
        <div class="aside-top">
            <a href="index.html" class="brand-wrap">
                <img src="admin_assets/imgs/theme/website3.png" class="logo" alt="Evara Dashboard">
            </a>
            <div>
                <button class="btn btn-icon btn-aside-minimize"> <i class="text-muted material-icons md-menu_open"></i>
                </button>
            </div>
        </div>
        <nav>
            <ul class="menu-aside">
                <li class="menu-item active">
                    <a class="menu-link" href="/admin/home"> <i class="icon material-icons md-home"></i>
                        <span class="text">Dashboard</span>
                    </a>
                </li>
                <li class="menu-item has-submenu">
                    <a class="menu-link" href="users"> <i class="icon material-icons md-shopping_cart"></i>
                        <span class="text">Users</span>
                    </a>
                    <div class="submenu">
                        <a href="/admin/userlist">User List</a>
        
                    </div>
                </li>
                <li class="menu-item has-submenu">
                    <a class="menu-link" href="products"> <i class="icon material-icons md-shopping_bag"></i>
                        <span class="text">Products</span>
                    </a>
                    <div class="submenu">
                        <a href="/admin/productlist">Product List</a>
                        <a href="/admin/addProduct">Add product </a>

               
                <li class="menu-item has-submenu">
                    <a class="menu-link" href="categories"> <i class="icon material-icons md-store"></i>
                        <span class="text">Categories</span>
                    </a>
                    <div class="submenu">
                        <a href="/admin/Category">Categories</a>
                    </div>
                </li>
                <li class="menu-item has-submenu">
                    <a class="menu-link" href="#"> <i class="icon material-icons md-store"></i>
                        <span class="text">Orders</span>
                    </a>
                    <div class="submenu">
                        <a href="/admin/orderList">OrderList</a>
                    </div>
                </li> 
                <li class="menu-item has-submenu">
                    <a class="menu-link" href="#"> <i class="icon material-icons md-store"></i>
                        <span class="text">Coupons</span>
                    </a>
                    <div class="submenu">
                        <a href="/admin/couponList">CouponList</a>
                    </div>
                </li>
                <li class="menu-item has-submenu">
                    <a class="menu-link" href="#"> <i class="icon material-icons md-store"></i>
                        <span class="text">Offer</span>
                    </a>
                    <div class="submenu">
                        <a href="/admin/offerPage">offerList</a>
                    </div>
                </li>  
                <li class="menu-item has-submenu">
                    <a class="menu-link" href="#"> <i class="icon material-icons md-store"></i>
                        <span class="text">Sales</span>
                    </a>
                    <div class="submenu">
                        <a href="/admin/salesReport">saleReport</a>
                    </div>
                </li> 
            </ul> 
            <br>
            <br>
        </nav>
    </aside>
    <main class="main-wrap">
        <header class="main-header navbar">
            <div class="col-search">
            </div>
            <div class="col-nav">
                <button class="btn btn-icon btn-mobile me-auto" data-trigger="#offcanvas_aside"> <i
                        class="material-icons md-apps"></i> </button>
                <ul class="nav">
                    <!-- <li class="nav-item">
                        <a class="nav-link btn-icon" href="#">
                             <i class="material-icons md-notifications animation-shake"></i> -->
                    <!-- <span class="badge rounded-pill">3</span> -->
                    <!-- </a> -->
                    <!-- </li>  -->
                    <li class="nav-item">
                        <a class="nav-link btn-icon darkmode" href="#"> <i class="material-icons md-nights_stay"></i>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a href="#" class="requestfullscreen nav-link btn-icon"><i
                                class="material-icons md-cast"></i></a>
                    </li>
                    <li class="dropdown nav-item">
                        <a class="dropdown-toggle" data-bs-toggle="dropdown" href="#" id="dropdownAccount"
                            aria-expanded="false"> <img class="img-xs rounded-circle"
                                src="admin_assets/imgs/people/admin1.png" alt="User"></a>
                        <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownAccount">
                            <a class="dropdown-item" href="#"><i class="material-icons md-perm_identity"></i>Edit
                                Profile</a>
                            <a class="dropdown-item" href="#"><i class="material-icons md-settings"></i>Account
                                Settings</a>
                            <a class="dropdown-item" href="#"><i
                                    class="material-icons md-account_balance_wallet"></i>Wallet</a>
                            <a class="dropdown-item" href="#"><i class="material-icons md-receipt"></i>Billing</a>
                            <a class="dropdown-item" href="#"><i class="material-icons md-help_outline"></i>Help
                                center</a>
                            <div class="dropdown-divider"></div>
                            <a class="dropdown-item text-danger" href="#"><i
                                    class="material-icons md-exit_to_app"></i>Logout</a>
                        </div>
                    </li>
                </ul>
            </div>
        </header>

        <div class="container mt-5">
            <div class="card">
                <div class="card-body">
                    <h2 class="card-title">Create a New Coupon</h2>
                    <form id="add-coupon-form" novalidate>
                        <div class="mb-3">
                            <label for="coupon-id" class="form-label">Coupon ID</label>
                            <input type="text" class="form-control" id="coupon-id" name="couponId" placeholder="Enter Coupon ID">
                            <div id="coupon-id-error" class="invalid-feedback"></div>
                        </div>
                        <div class="mb-3">
                            <label for="description" class="form-label">Description</label>
                            <input type="text" class="form-control" id="description" name="description" placeholder="Enter Description">
                            <div id="description-error" class="invalid-feedback"></div>
                        </div>
                        <div class="mb-3">
                            <label for="max-discount" class="form-label">Discount</label>
                            <input type="text" class="form-control" id="max-discount" name="maximumDiscount" placeholder="Enter Maximum Discount">
                            <div id="max-discount-error" class="invalid-feedback"></div>
                        </div>
                        <div class="mb-3">
                            <label for="min-amount" class="form-label">Minimum Amount</label>
                            <input type="text" class="form-control" id="min-amount" name="minimumAmount" placeholder="Enter Minimum Amount">
                            <div id="min-amount-error" class="invalid-feedback"></div>
                        </div>
                        <div class="mb-3">
                            <label for="max-amount" class="form-label">Maximum Amount</label>
                            <input type="text" class="form-control" id="max-amount" name="maximumAmount" placeholder="Enter Maximum Amount">
                            <div id="max-amount-error" class="invalid-feedback"></div>
                        </div>
                        <div class="mb-3">
                            <label for="max-user" class="form-label">Maximum User</label>
                            <input type="text" class="form-control" id="max-user" name="maximumUser" placeholder="Enter Maximum User">
                            <div id="max-user-error" class="invalid-feedback"></div>
                        </div>
                        <div class="mb-3">
                            <label for="expire-date" class="form-label">Expire Date</label>
                            <input type="date" class="form-control" id="expire-date" name="expireDate">
                            <div id="expire-date-error" class="invalid-feedback"></div>
                        </div>
                        <button type="submit" class="btn btn-primary" style="border-radius: 0;">Create Coupon</button>
                    </form>
                </div>
            </div>
        </div>
    </main>
    <script src="admin_assets/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="admin_assets/js/vendors/select2.min.js"></script>
    <script src="admin_assets/js/vendors/perfect-scrollbar.js"></script>
    <script src="admin_assets/js/vendors/jquery.fullscreen.min.js"></script>
    <!-- Main Script -->
    <script src="admin_assets/js/main.js" type="text/javascript"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const couponId = document.getElementById("coupon-id");
            const description = document.getElementById("description");
            const maxDiscount = document.getElementById("max-discount");
            const maxAmount = document.getElementById("max-amount");
            const minAmount = document.getElementById("min-amount");
            const maxUser = document.getElementById("max-user");
            const expireDate = document.getElementById("expire-date");
            const form = document.getElementById("add-coupon-form");
    
            couponId.addEventListener("blur", function () {
                const value = couponId.value.trim();
                if (value === "" || /[\s,.]/.test(value.charAt(0))) {
                    showError(couponId, "Coupon ID is required.");
                } else {
                    hideError(couponId);
                }
            });
    
            description.addEventListener("blur", function () {
                const value = description.value.trim();
                if (value === "" || /[^\w\s]/.test(value)) {
                    showError(description, "Description is invalid.");
                } else {
                    hideError(description);
                }
            });
    
            maxDiscount.addEventListener("blur", function () {
                const maxValue = parseFloat(maxDiscount.value.trim());
                const minValue = parseFloat(minAmount.value.trim());
                if (isNaN(maxValue) || maxValue <= 0 || maxValue > 5000) {
                    showError(maxDiscount, "Maximum Discount must be a positive number less than 5000.");
                } else if (!isNaN(minValue) && maxValue >= minValue) {
                    showError(maxDiscount, "Maximum Discount must be less than Minimum Amount.");
                } else {
                    hideError(maxDiscount);
                }
            });
    
            minAmount.addEventListener("blur", function () {
                const minValue = parseFloat(minAmount.value.trim());
                const maxValue = parseFloat(maxDiscount.value.trim());
                if (isNaN(minValue) || minValue <= 0) {
                    showError(minAmount, "Minimum Amount must be a positive number.");
                } else if (!isNaN(maxValue) && maxValue >= minValue) {
                    showError(minAmount, "Minimum Amount must be greater than Discount.");
                } else {
                    hideError(minAmount);
                }
            });
    
            maxAmount.addEventListener("blur", function () {
                const value = parseFloat(maxAmount.value.trim());
                const minAmountValue = parseFloat(minAmount.value.trim());
                if (isNaN(value) || value <= 0) {
                    showError(maxAmount, "Maximum Amount must be a positive number.");
                } else if (!isNaN(minAmountValue) && value <= minAmountValue) {
                    showError(maxAmount, "Maximum Amount must be greater than Minimum Amount.");
                } else {
                    hideError(maxAmount);
                }
            });
    
            maxUser.addEventListener("blur", function () {
                const value = parseFloat(maxUser.value.trim());
                if (isNaN(value) || value <= 0) {
                    showError(maxUser, "Maximum User must be a positive number.");
                } else {
                    hideError(maxUser);
                }
            });
    
            expireDate.addEventListener("blur", function () {
                const value = expireDate.value.trim();
                const currentDate = new Date();
                const selectedDate = new Date(value);
                if (isNaN(selectedDate.getTime()) || selectedDate <= currentDate) {
                    showError(expireDate, "Expiry date must be a future date.");
                } else {
                    hideError(expireDate);
                }
            });
    
            form.addEventListener("submit", function (event) {
                let formIsValid = true;
    
                if (couponId.value.trim() === "" || /[\s,.]/.test(couponId.value.trim().charAt(0))) {
                    showError(couponId, "Coupon ID is required.");
                    formIsValid = false;
                }
    
                if (description.value.trim() === "" || /[^\w\s]/.test(description.value.trim())) {
                    showError(description, "Description is invalid.");
                    formIsValid = false;
                }
    
                const maxValue = parseFloat(maxDiscount.value.trim());
                const minValue = parseFloat(minAmount.value.trim());
                if (isNaN(maxValue) || maxValue <= 0 || maxValue > 5000) {
                    showError(maxDiscount, "Maximum Discount must be a positive number less than 5000.");
                    formIsValid = false;
                } else if (!isNaN(minValue) && maxValue >= minValue) {
                    showError(maxDiscount, "Maximum Discount must be less than Minimum Amount.");
                    formIsValid = false;
                }
    
                if (isNaN(minValue) || minValue <= 0) {
                    showError(minAmount, "Minimum Amount must be a positive number.");
                    formIsValid = false;
                } else if (!isNaN(maxValue) && maxValue >= minValue) {
                    showError(minAmount, "Minimum Amount must be greater than Discount.");
                    formIsValid = false;
                }
    
                const maxAmountValue = parseFloat(maxAmount.value.trim());
                if (isNaN(maxAmountValue) || maxAmountValue <= 0) {
                    showError(maxAmount, "Maximum Amount must be a positive number.");
                    formIsValid = false;
                } else if (!isNaN(minValue) && maxAmountValue <= minValue) {
                    showError(maxAmount, "Maximum Amount must be greater than Minimum Amount.");
                    formIsValid = false;
                }
    
                const maxUserValue = parseFloat(maxUser.value.trim());
                if (isNaN(maxUserValue) || maxUserValue <= 0) {
                    showError(maxUser, "Maximum User must be a positive number.");
                    formIsValid = false;
                }
    
                const selectedDate = new Date(expireDate.value.trim());
                const currentDate = new Date();
                if (isNaN(selectedDate.getTime()) || selectedDate <= currentDate) {
                    showError(expireDate, "Expiry date must be a future date.");
                    formIsValid = false;
                }
    
                if (!formIsValid) {
                    event.preventDefault();
                }
            });
    
            function showError(element, message) {
                const errorElement = document.getElementById(element.id + "-error");
                errorElement.textContent = message;
                element.classList.add("is-invalid");
                element.classList.remove("is-valid");
            }
    
            function hideError(element) {
                const errorElement = document.getElementById(element.id + "-error");
                errorElement.textContent = "";
                element.classList.remove("is-invalid");
                element.classList.add("is-valid");
            }
        });
    </script>
    <script>
document.getElementById('add-coupon-form').addEventListener('submit', async function (event) {
    event.preventDefault();
    
    const form = event.target;
    const formData = new FormData(form);
    
    try {
        const response = await fetch('/admin/createCoupon', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(Object.fromEntries(formData))
        });
        
        if (response.ok) {
            Swal.fire({
                title: 'Success',
                text: 'Coupon created',
                icon: 'success',
                timer: 2000
            });
            setTimeout(() => {
                window.location.href = '/admin/couponList';
            }, 2000);
        } else {
            throw new Error('Failed to create coupon');
        }
    } catch (error) {
        console.error('Error:', error);
        Swal.fire({
            title: 'Error',
            text: 'Failed to create coupon',
            icon: 'error',
            timer: 2000
        });
    }
});
    </script>
</body>

</html>